name: CI jobs

on:
  push:

jobs:
  blog-storage:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 10.13.0
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - name: Build with npm run
        run: |
          cd frontend;
          npm install
          npm run test
          npm run prod
          rm -rf ./frontend/node_modules/.cache
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install backend software
        run: |
          mkdir -p ${HOME}/bin && curl https://raw.githubusercontent.com/vishnubob/wait-for-it/8ed92e8cab83cfed76ff012ed4a36cef74b28096/wait-for-it.sh > ${HOME}/bin/wait-for-it.sh && chmod +x ${HOME}/bin/wait-for-it.sh
      - name: Start & wait docker-compose environment
        run: |
          docker-compose up -d
          ${HOME}/bin/wait-for-it.sh -t 30 127.0.0.1:27017 -- echo 'mongo is up'
          ${HOME}/bin/wait-for-it.sh -t 30 127.0.0.1:9000 -- echo 'minio is up'
      - name: Build & test blog-storage
        run: CGO_ENABLED=0 go build -trimpath -ldflags '-w -extldflags "-static"'
      - name: Build docker image
        run: |
          BUILDDIR=./build;
          EXECUTABLE=./blog-storage;
          IMAGE=nkonev/blog-storage:latest;
          mkdir -p $BUILDDIR && mv $EXECUTABLE $BUILDDIR && cp ./Dockerfile $BUILDDIR && \
          docker build -t $IMAGE $BUILDDIR
      - name: Deploy blog-storage
        if: github.ref == 'refs/heads/master'
        run: |
          IMAGE=nkonev/blog-storage:latest;
          mkdir -p ~/.ssh && openssl aes-256-cbc -K ${{ secrets.EncryptedKey }} -iv ${{ secrets.EncryptedIv }} -in ./.secret_keys/id_rsa.enc -out ~/.ssh/id_rsa -d && \
          chmod 600 ~/.ssh/id_rsa && \
          echo "Will login to docker" && \
          docker login -u="nkonev" -p="${{ secrets.DockerPassword }}" && \
          docker push $IMAGE && echo "Will deploy blog-storage" && \
          ssh -o "BatchMode yes" -o StrictHostKeyChecking=no -q ${{ secrets.ConnectLine }} ${{ secrets.BlogStorageUpdateCommand }}
